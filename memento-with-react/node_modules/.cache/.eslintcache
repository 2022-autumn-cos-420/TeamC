[{"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/reportWebVitals.js":"1","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/index.tsx":"2","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/App.tsx":"3","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/utils.ts":"4","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/CollectPage.tsx":"5","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/HomePage.tsx":"6","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/QuizPage.tsx":"7","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/ImportPage.tsx":"8","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Colltab.tsx":"9","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Flashcard.tsx":"10","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Parsecard.tsx":"11","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Importcard.tsx":"12","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/importExport.ts":"13"},{"size":362,"mtime":1669577634388,"results":"14","hashOfConfig":"15"},{"size":901,"mtime":1669583425250,"results":"16","hashOfConfig":"15"},{"size":6369,"mtime":1669595224225,"results":"17","hashOfConfig":"15"},{"size":1927,"mtime":1669628296846,"results":"18","hashOfConfig":"15"},{"size":4717,"mtime":1669637416077,"results":"19","hashOfConfig":"15"},{"size":3605,"mtime":1669596723510,"results":"20","hashOfConfig":"15"},{"size":1130,"mtime":1669597075551,"results":"21","hashOfConfig":"15"},{"size":473,"mtime":1669596584470,"results":"22","hashOfConfig":"15"},{"size":4170,"mtime":1669597060875,"results":"23","hashOfConfig":"15"},{"size":5014,"mtime":1669596934334,"results":"24","hashOfConfig":"15"},{"size":981,"mtime":1669590396020,"results":"25","hashOfConfig":"15"},{"size":1576,"mtime":1669597369695,"results":"26","hashOfConfig":"15"},{"size":4334,"mtime":1669628965048,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"sygvsk",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/reportWebVitals.js",[],[],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/index.tsx",[],[],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/App.tsx",["75","76","77","78","79","80","81"],[],"// import logo from './logo.svg';\nimport './App.css';\nimport HomePage from \"./pages/HomePage\";\nimport CollectPage from \"./pages/CollectPage\";\nimport QuizPage from \"./pages/QuizPage\";\nimport ImportPage from \"./pages/ImportPage\";\nimport React, {useState} from 'react';\nimport { Card } from \"./interfaces/card\";\nimport { equal } from \"assert\";\nimport { cardEquality, arrayEquality, exportPath, deckEquality, stringToCard } from \"./utils\";\n\n\n//Just here for testing purposes. Each should have a different front from all the others\nlet cardArray: Card[] =  [\n  {id: 0, cardColor: \"Red\", frontText: \"front On2e!\", backText: \"back Onsdae!\", cardHint: \"cardHint One!\", cardDecks: [\"Apples...\", \"Bananas\"], accuracy: 0},\n  {id: 1, cardColor: \"Red\", frontText: \"front TW4o!\", backText: \"back TWo!\", cardHint: \"cardHint TWO!\", cardDecks: [\"Apples...\"], accuracy: 100},\n  {id: 2, cardColor: \"Red\", frontText: \"front TH3REE!\", backText: \"back Three\", cardHint: \"cardHint Three!\", cardDecks: [\"Apples...\"], accuracy: 40},\n  {id: 3, cardColor: \"Red\", frontText: \"front On6e!\", backText: \"back One!\", cardHint: \"cardHint One!\", cardDecks: [\"Apples...\"], accuracy: 75},\n  {id: 4, cardColor: \"Red\", frontText: \"front TW5o!\", backText: \"back TWo!\", cardHint: \"cardHint TWO!\", cardDecks: [\"Apples...\"], accuracy: 11},\n  {id: 5, cardColor: \"Red\", frontText: \"front THR7EE!\", backText: \"back Three\", cardHint: \"cardHint Three!\", cardDecks: [\"Apples...\"], accuracy: 53},\n  {id: 6, cardColor: \"Red\", frontText: \"front On9e!\", backText: \"back One!\", cardHint: \"cardHint One!\", cardDecks: [\"Apples...\"], accuracy: 66},\n  {id: 7, cardColor: \"Red\", frontText: \"front TW8o!\", backText: \"back TWo!\", cardHint: \"cardHint TWO!\", cardDecks: [\"Apples...\"], accuracy: 14},\n  {id: 8, cardColor: \"Red\", frontText: \"front TH0REE!\", backText: \"back Three\", cardHint: \"cardHint Three!\", cardDecks: [\"Apples...\"], accuracy: 122},\n  {id: 9, cardColor: \"Red\", frontText: \"front On-e!\", backText: \"back One!\", cardHint: \"cardHint One!\", cardDecks: [\"Apples...\"], accuracy: 100},\n  {id: 10, cardColor: \"Red\", frontText: \"front T=Wo!\", backText: \"back TWo!\", cardHint: \"cardHint TWO!\", cardDecks: [\"Apples...\"], accuracy: 5},\n  {id: 11, cardColor: \"Red\", frontText: \"front ThHREE!\", backText: \"back Three\", cardHint: \"cardHint Three!\", cardDecks: [\"Apples...\"], accuracy: 1},\n  {id: 12, cardColor: \"Red\", frontText: \"front Oane!\", backText: \"back One!\", cardHint: \"cardHint One!\", cardDecks: [\"Apples...\"], accuracy: 45},\n  {id: 13, cardColor: \"Red\", frontText: \"front TbWo!\", backText: \"back TWo!\", cardHint: \"cardHint TWO!\", cardDecks: [\"Apples...\"], accuracy: 10},\n  {id: 14, cardColor: \"Red\", frontText: \"front THeREE!\", backText: \"back Three\", cardHint: \"cardHint Three!\", cardDecks: [\"Apples...\"], accuracy: 30}\n]\n\n//! Changing this so that it doesn't assume a given order of the collection. Its marginally slower but more robust\n//Remember to always add an id, just use the last id in the cardArray\nfunction addCard(cFrontText: string, cBackText: string, cCardHint: string, cCardDeck: string): void {\n    console.log(\"Adding card in App.ts. Got\", cFrontText, \" as front text\");\n    let maxId: number = -1;\n    if (cardArray.length > 0) { //Dont want to try to find the -1th element of cardArray\n        cardArray.map((card: Card): void => {\n            if (card.id > maxId) {maxId = card.id}\n        })\n    }\n    const newId: number = maxId + 1;\n    console.log(\"New Id is: \", newId);\n    let newCard = {id: newId, cardColor: \"Red\", frontText: cFrontText, backText: cBackText, cardHint: cCardHint, cardDecks: [cCardDeck], accuracy: 100};\n    cardArray.push(newCard);\n}\n\n//! Simplified with utils.ts function, will need to change how the data is passed into it though\n//This was done before we added ids, probably best to update this!\nfunction deleteCard(targetCard: Card): void {\n  console.log(\"Deleting card from the array!\");\n  cardArray = cardArray.filter((card: Card) => !cardEquality(card, targetCard))\n}\n\n//! Simplified with utils equality function and mapping, but will need to be changed again when we made cardArray a state variable\n//!    because we'll need to use a setState function\n//Also done before Ids!\nfunction updateCard(targetCard: Card, newFront: string, newBack: string, newHint: string, newDecks: string[]): void {\n    console.log(\"Finding and updating card from App.ts: oldFront: \", targetCard.frontText, \" oldBack: \", targetCard.backText, \" oldHint: \", targetCard.cardHint);\n    cardArray.map((card: Card): void => {\n        if (cardEquality(card, targetCard)){\n            card.frontText = newFront;\n            card.backText = newBack;\n            card.cardHint = newHint;\n            card.cardDecks = newDecks;\n            console.log(\"Found Card to update!\");\n        }})\n}\n\n\nfunction App() {\n\n    const [page, setCurrentPage] = useState(\"HomePage\");\n    //! Added \"/#\" for hrefs according to https://stackoverflow.com/questions/52801051/react-site-warning-the-href-attribute-requires-a-valid-address-provide-a-valid\n    //! No clue if this was necessary, but it removed warnings\n    return (\n    <div className=\"App\">\n      <div className=\"container\" id=\"Home\">\n      <div className=\"navbar\">\n            <nav>\n                <ul>\n                    <a href=\"/#\" className=\"logobtn\" onClick={() => setCurrentPage(\"HomePage\")} id=\"goHomeButton\">momento</a>\n                    <li><a href = \"/#\" onClick={() => setCurrentPage(\"LibraryPage\")} id=\"goLibraryButton\">Library</a></li>\n                    <li><a href = \"/#\" onClick={() => setCurrentPage(\"QuizPage\")} id=\"goQuizButton\">Quiz</a></li>\n                    <li><a href = \"/#\" id=\"goCollectionButton\" onClick={() => setCurrentPage(\"CollectionPage\")}>Collection</a></li>\n                    <li><a href=\"/#\" onClick={() => setCurrentPage(\"ImportPage\")}>Import</a></li>\n                    <a href=\"/\" className=\"signupbtn\">Sign Up</a>\n                </ul>\n            </nav>\n        </div>\n        {page === \"HomePage\" && <HomePage cardType = \"FlashCard\" addCard = {addCard}></HomePage>}\n        {page === \"CollectionPage\" && <CollectPage cardArray ={cardArray} deleteCard = {deleteCard} updateCard = {updateCard}></CollectPage>}\n        {page === \"QuizPage\" && <QuizPage cardArray={cardArray}></QuizPage>}\n        {page === \"ImportPage\" && <ImportPage></ImportPage>}\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/utils.ts",["82","83","84","85","86","87"],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/CollectPage.tsx",["88","89","90","91","92"],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/HomePage.tsx",["93"],[],"import React, {useState, Component} from \"react\";\nimport './HomePage.css';\nimport FlashCard from './components/Flashcard'\nimport ParseCard from './components/Parsecard'\n\n// class App extends React.Component<{ message: string }, { count: number }> {\n//     state = { count: 0 };\n//     render() {\n//       return (\n//         <div onClick={() => this.increment(1)}>\n//           {this.props.message} {this.state.count}\n//         </div>\n//       );\n//     }\n//     increment = (amt: number) => {\n//       // like this\n//       this.setState((state) => ({\n//         count: state.count + amt,\n//       }));\n//     };\n//   }\n\ninterface Props {\n    cardType: string;\n    addCard: (cFrontText: string, cBackText: string, cCardHint: string, cCardDeck: string) => void;\n};\ninterface State {\n    cardType: string,\n    frontText: string,\n    backText: string,\n    cardHint: string,\n    cardDeck: string,\n    addCard: (cFrontText: string, cBackText: string, cCardHint: string, cCardDeck: string) => void\n};\n\nclass HomePage extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            cardType: \"FlashCard\",\n            frontText: \"\",\n            backText: \"\",\n            cardHint: \"\",\n            cardDeck: \"\",\n            addCard: this.props.addCard\n        }\n        this.toggleCardType = this.toggleCardType.bind(this);\n    }\n    \n\n    updateHandler = (newFront: string, newBack: string, newHint: string, newDeck: string): void => {\n        console.log(\"updating!\");\n        this.setState({frontText: newFront,\n                        backText: newBack,\n                        cardHint: newHint,\n                        cardDeck: newDeck});\n    }\n\n    addCardHandler = (event: MouseEvent): void => {\n        this.setState({frontText: \"\",\n                        backText: \"\",\n                        cardHint: \"\",\n                        cardDeck: \"\"}, () => {console.log(\"New HomePage state frontText: \", this.state.frontText)});\n                    \n        //Now we have to call the page above, to app.js\n        console.log(\"Trying to add Card! in HomePage, got: \", this.state.frontText, \"Back: \", this.state.backText);\n        //! Changed newDeckArray to be a string, assuming that the user only adds new cards to at most 1 deck\n        let newDeckArray = this.state.cardDeck;\n        this.props.addCard(this.state.frontText, this.state.backText, this.state.cardHint, newDeckArray)\n    }\n\n    toggleCardType = () => {\n        if (this.state.cardType ===\"FlashCard\") {\n            this.setState({cardType: \"ParseCard\"});\n        }\n        else {\n            this.setState({cardType: \"FlashCard\"});\n        }\n        console.log(\"Toggling Card!\");\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.cardType === \"FlashCard\" && <FlashCard type={\"Normal\"} frontText={this.state.frontText} backText={this.state.backText} cardHint={this.state.cardHint} cardDeck={this.state.cardDeck} update = {this.updateHandler}></FlashCard>}\n                {this.state.cardType === \"ParseCard\" && <ParseCard cardDeck={this.state.cardDeck}></ParseCard>}\n                <div className=\"HomeCardButtons\">\n                    <label className=\"Switch\">\n                        <input type=\"checkbox\"></input>\n                        <span className = \"slider round\" onClick={() => this.toggleCardType}></span>\n                    </label>\n                    <button className=\"AddCardButton\" onClick={() => this.addCardHandler}>&#43;</button>\n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nexport default HomePage;","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/QuizPage.tsx",["94","95","96","97","98","99","100"],[],"import React, {useState, Component} from \"react\";\nimport './QuizPage.css';\nimport FlashCard from './components/Flashcard'\nimport { Card } from \"../interfaces/card\";\nimport { cardEquality, arrayEquality, exportPath, deckEquality, stringToCard } from \"../utils\";\n\ninterface Props {\n    cardArray: Card[];\n}\ninterface State {\n    cardArray: Card[],\n    frontText: string,\n    backText: string,\n    cardHint: string,\n    cardDecks: string[],\n    cardType: string\n}\nclass QuizPage extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            cardArray: this.props.cardArray,\n            frontText: \"\",\n            backText: \"\",\n            cardHint: \"\",\n            cardDecks: [],\n            cardType: \"QuizCard\",\n        }\n    }\n\n    nextCard = () => {\n        \n    }\n\n    render() {\n        return (\n            <div>\n                {/* <FlashCard type={\"Quiz\"} frontText={this.state.frontText} backText={this.state.backText} cardHint={this.state.cardHint} cardDecks={this.state.cardDecks}></FlashCard> */}\n            </div>\n        )\n    }\n}\n\nexport default QuizPage;\n","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/ImportPage.tsx",["101"],[],"import React, {useState, Component} from \"react\";\n/*import './ImportPage.css';*/\nimport ImportCard from './components/Importcard';\n\ninterface Props {\n}\ninterface State {\n}\nclass ImportPage extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <ImportCard></ImportCard>\n            </div>\n        )\n    }\n}\n\nexport default ImportPage;","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Colltab.tsx",["102","103","104","105","106"],[],"import React, {Component} from 'react';\nimport './Colltab.css';\nimport { Card } from \"../../interfaces/card\";\nimport { cardEquality, arrayEquality, exportPath, deckEquality, stringToCard } from \"../../utils\";\n\ninterface Props {\n    card: Card,\n    deleted: (targetCard: Card) => void,\n    updated: (oldCard: Card, newFront: string, newBack: string, newHint:string, newDecks: string[]) => void\n}\ninterface State {\n    render: boolean,\n    localCard: Card\n}\nclass CollTab extends Component<Props, State>{    //Still need to figure out how to pass changes up from the tab!\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            render: false,\n            localCard: this.props.card\n        }\n        this.toggleContent = this.toggleContent.bind(this);\n    }\n\n\n    toggleContent() { //This currently works although it is quite ugly and doesn't do any animation\n        this.setState({render: !this.state.render});\n        console.log(\"Changing the render!\", this.state.render);\n    }\n\n    handleFrontChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({localCard: {...this.state.localCard, frontText: event.currentTarget.value}});\n    }\n\n    handleBackChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({localCard: {...this.state.localCard, backText: event.currentTarget.value}});\n    }\n\n    handleHintChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({localCard: {...this.state.localCard, cardHint: event.currentTarget.value}});\n    }\n    \n    handleDecksChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({localCard: {...this.state.localCard, cardDecks: [event.currentTarget.value]}});\n    }\n\n\n    render() {\n        const buttonStyle = {\n            backgroundColor: 'white',\n            font: 'inherit',\n            border: '1px solid blue',\n            padding: '8px',\n            cursor: 'pointer'\n        };\n    return (\n        <div className=\"CollTab\">\n            <button type=\"button\" onClick={this.toggleContent} className='collapsible'>{this.state.localCard.frontText}</button>\n            <div \n                className=\"content\"\n                style={{maxHeight: this.state.render ? '400px': '0px'}}>\n                <div className=\"row\">\n                    <div className=\"column\">\n                        {/* <h>Current Card Values:</h> */}\n                        <p>Current Card Values:</p>\n                        <p>Front Text: {this.props.card.frontText}</p>\n                        <p>Back Text: {this.props.card.backText}</p>\n                        <p>Card Hint: {this.props.card.cardHint} </p>\n                        <p>Card Decks: {this.props.card.cardDecks}</p>\n                    </div>\n                    <div className=\"column\">\n                        <p>Please enter new values:</p>\n                        {/* <h>Please enter new values:</h> */}\n                        <p><input type=\"text\" onChange={this.handleFrontChange} value={this.state.localCard.frontText}></input></p>\n                        <p><input type=\"text\" onChange={this.handleBackChange} value={this.state.localCard.backText}></input></p>\n                        <p><input type=\"text\" onChange={this.handleHintChange} value={this.state.localCard.cardHint}></input></p>\n                        <p><input type=\"text\" onChange={this.handleDecksChange} value={this.state.localCard.cardDecks}></input></p>\n                    </div>\n                </div>\n                <div className=\"CollTabButtons\">\n                    <button\n                        style={buttonStyle}\n                        onClick={() => this.props.updated(this.props.card, this.state.localCard.frontText, this.state.localCard.backText, this.state.localCard.cardHint, this.state.localCard.cardDecks)}>Update Card</button>\n                    <button\n                        className=\"deleteButton\"\n                        style={buttonStyle}\n                        onClick={() => this.props.deleted(this.props.card)}>Delete Card</button>\n                </div>\n            </div>\n        </div>\n    )\n    }\n};\n\nexport default CollTab;","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Flashcard.tsx",["107","108"],[],"import React, {ChangeEvent, Component, PropsWithChildren} from 'react';\nimport './Flashcard.css';\n\ninterface Props {\n    type: string,\n    frontText: string,\n    backText: string,\n    cardHint: string,\n    cardDeck: string,\n    update: (newFront: string, newBack: string, newHint: string, newDeck: string) => void\n};\ninterface State {\n    side: string,\n    type: string,\n    localCardFront: string,\n    localCardBack: string,\n    localcardDeck: string,\n    localCardHint: string,\n    flipState: boolean\n};\n\n\nclass FlashCard extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            side: \"front\",\n            type: this.props.type,\n            localCardFront: this.props.frontText,\n            localCardBack: this.props.backText,\n            localcardDeck: this.props.cardDeck,\n            localCardHint: this.props.cardHint,\n            flipState: false\n        }\n        this.flipCard = this.flipCard.bind(this);\n    }\n\n    flipCard = () => {\n        console.log(\"Flipping from: \", this.state.side);\n        this.setState({flipState: !this.state.flipState});\n        if (this.state.side === \"front\") {\n            this.setState({side: \"back\"});\n        }\n        else {\n            this.setState({side: \"front\"});\n        }\n        console.log(\"flipState:\", this.state.flipState);\n        console.log(this.state.localCardFront);\n    }\n\n    handleFrontChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.type !== \"Normal\") {\n            return;\n        }\n        console.log(\"Changing the front!\");\n        let newFront = event.currentTarget.value;\n        this.setState({localCardFront: newFront});\n        console.log(\"NewState for front: \", newFront);\n        this.props.update(newFront, this.state.localCardBack, this.state.localCardHint, this.state.localcardDeck);\n\n    }\n\n    handleBackChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.type !== \"Normal\") {\n            return;\n        }\n        let newBack = event.currentTarget.value;\n        this.setState({localCardBack: newBack});\n        this.props.update(this.state.localCardFront, newBack, this.state.localCardHint, this.state.localcardDeck);\n\n    }\n\n    handleHintChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.type !== \"Normal\") {\n            return;\n        }\n        let newHint = event.currentTarget.value;\n        this.setState({localCardHint: newHint});\n        this.props.update(this.state.localCardFront, this.state.localCardBack, newHint, this.state.localcardDeck);\n\n    }\n\n    handleDecksChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.type !== \"Normal\") {\n            return;\n        }\n        let newDecks = event.currentTarget.value;\n        this.setState({localcardDeck: newDecks});\n        this.props.update(this.state.localCardFront, this.state.localCardBack, this.state.localCardHint, newDecks);\n    }\n\n\n    render() {\n        return (\n            <div className=\"FlashCard\">\n                <div className=\"FlashCardInner\" style={{transform: this.state.flipState ? \"rotateX(180deg)\": \"\"}}>\n                    <div className=\"FlashCardFront\">\n                        {/* <top> */}\n                        <ul>\n                            <li><span className=\"Dot\"></span></li>\n                            <li><input type=\"CardHint\" placeholder=\"Notes/Hints\" onChange={this.handleHintChange} value={this.props.cardHint} style={{opacity: this.props.type === \"Quiz\" ? \"0\": \"1\"}}></input></li>\n                            <li><input type=\"CardDeck\" placeholder=\"Deck\" onChange={this.handleDecksChange} className=\"CardDeck\" value={this.props.cardDeck}></input></li>\n                        </ul>\n                        {/* </top> */}\n                        <input type=\"CardFrontText\" placeholder=\"Write\" onChange = {this.handleFrontChange} value={this.props.frontText}></input>\n                        <button className=\"FlipCardButton\" onClick={this.flipCard}></button>\n                    </div>\n                    <div className=\"FlashCardBack\">\n                        {/* <top> */}\n                        <ul>\n                            <li><span className=\"Dot\"></span></li>\n                            <li><input type=\"CardHint\" placeholder=\"Notes/Hints\" onChange={this.handleHintChange} value={this.props.cardHint}></input></li>\n                            <li><input type=\"CardDeck\" placeholder=\"Deck\" onChange={this.handleDecksChange} className=\"CardDeck\" value={this.props.cardDeck}></input></li>\n                        </ul>\n                        {/* </top> */}\n                        <input type=\"CardFrontText\" placeholder=\"Write Back\" onChange = {this.handleBackChange} value={this.props.backText}></input>\n                        <button className=\"FlipCardButton\" onClick={this.flipCard}></button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default FlashCard","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Parsecard.tsx",[],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Importcard.tsx",[],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/importExport.ts",["109","110","111","112","113","114","115","116"],[],{"ruleId":"117","severity":1,"message":"118","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":15},{"ruleId":"117","severity":1,"message":"121","line":10,"column":24,"nodeType":"119","messageId":"120","endLine":10,"endColumn":37},{"ruleId":"117","severity":1,"message":"122","line":10,"column":39,"nodeType":"119","messageId":"120","endLine":10,"endColumn":49},{"ruleId":"117","severity":1,"message":"123","line":10,"column":51,"nodeType":"119","messageId":"120","endLine":10,"endColumn":63},{"ruleId":"117","severity":1,"message":"124","line":10,"column":65,"nodeType":"119","messageId":"120","endLine":10,"endColumn":77},{"ruleId":"125","severity":1,"message":"126","line":38,"column":42,"nodeType":"127","messageId":"128","endLine":38,"endColumn":44},{"ruleId":"125","severity":1,"message":"126","line":60,"column":38,"nodeType":"127","messageId":"128","endLine":60,"endColumn":40},{"ruleId":"117","severity":1,"message":"129","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"130","line":3,"column":13,"nodeType":"119","messageId":"120","endLine":3,"endColumn":15},{"ruleId":"117","severity":1,"message":"131","line":4,"column":13,"nodeType":"119","messageId":"120","endLine":4,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":14,"column":56,"nodeType":"127","messageId":"128","endLine":14,"endColumn":58},{"ruleId":"125","severity":1,"message":"126","line":39,"column":55,"nodeType":"127","messageId":"128","endLine":39,"endColumn":57},{"ruleId":"117","severity":1,"message":"132","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"121","line":6,"column":24,"nodeType":"119","messageId":"120","endLine":6,"endColumn":37},{"ruleId":"117","severity":1,"message":"122","line":6,"column":39,"nodeType":"119","messageId":"120","endLine":6,"endColumn":49},{"ruleId":"117","severity":1,"message":"123","line":6,"column":51,"nodeType":"119","messageId":"120","endLine":6,"endColumn":63},{"ruleId":"117","severity":1,"message":"124","line":6,"column":65,"nodeType":"119","messageId":"120","endLine":6,"endColumn":77},{"ruleId":"117","severity":1,"message":"132","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"132","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"133","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":17},{"ruleId":"117","severity":1,"message":"134","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":22},{"ruleId":"117","severity":1,"message":"121","line":5,"column":24,"nodeType":"119","messageId":"120","endLine":5,"endColumn":37},{"ruleId":"117","severity":1,"message":"122","line":5,"column":39,"nodeType":"119","messageId":"120","endLine":5,"endColumn":49},{"ruleId":"117","severity":1,"message":"123","line":5,"column":51,"nodeType":"119","messageId":"120","endLine":5,"endColumn":63},{"ruleId":"117","severity":1,"message":"124","line":5,"column":65,"nodeType":"119","messageId":"120","endLine":5,"endColumn":77},{"ruleId":"117","severity":1,"message":"132","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"134","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":22},{"ruleId":"117","severity":1,"message":"121","line":4,"column":24,"nodeType":"119","messageId":"120","endLine":4,"endColumn":37},{"ruleId":"117","severity":1,"message":"122","line":4,"column":39,"nodeType":"119","messageId":"120","endLine":4,"endColumn":49},{"ruleId":"117","severity":1,"message":"123","line":4,"column":51,"nodeType":"119","messageId":"120","endLine":4,"endColumn":63},{"ruleId":"117","severity":1,"message":"124","line":4,"column":65,"nodeType":"119","messageId":"120","endLine":4,"endColumn":77},{"ruleId":"117","severity":1,"message":"135","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":27},{"ruleId":"117","severity":1,"message":"136","line":1,"column":40,"nodeType":"119","messageId":"120","endLine":1,"endColumn":57},{"ruleId":"117","severity":1,"message":"129","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"131","line":4,"column":13,"nodeType":"119","messageId":"120","endLine":4,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"117","severity":1,"message":"121","line":6,"column":24,"nodeType":"119","messageId":"120","endLine":6,"endColumn":37},{"ruleId":"117","severity":1,"message":"123","line":6,"column":51,"nodeType":"119","messageId":"120","endLine":6,"endColumn":63},{"ruleId":"125","severity":1,"message":"126","line":80,"column":39,"nodeType":"127","messageId":"128","endLine":80,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":84,"column":42,"nodeType":"127","messageId":"128","endLine":84,"endColumn":44},{"ruleId":"125","severity":1,"message":"126","line":87,"column":57,"nodeType":"127","messageId":"128","endLine":87,"endColumn":59},"@typescript-eslint/no-unused-vars","'equal' is defined but never used.","Identifier","unusedVar","'arrayEquality' is defined but never used.","'exportPath' is defined but never used.","'deckEquality' is defined but never used.","'stringToCard' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'urlToHttpOptions' is defined but never used.","'fs' is defined but never used.","'path' is defined but never used.","'useState' is defined but never used.","'FlashCard' is defined but never used.","'cardEquality' is defined but never used.","'ChangeEvent' is defined but never used.","'PropsWithChildren' is defined but never used."]