[{"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/reportWebVitals.js":"1","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/index.tsx":"2","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/App.tsx":"3","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/utils.ts":"4","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/CollectPage.tsx":"5","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/HomePage.tsx":"6","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/QuizPage.tsx":"7","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/ImportPage.tsx":"8","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Colltab.tsx":"9","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Flashcard.tsx":"10","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Parsecard.tsx":"11","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Importcard.tsx":"12","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/importExport.ts":"13"},{"size":362,"mtime":1669577634388,"results":"14","hashOfConfig":"15"},{"size":901,"mtime":1669583425250,"results":"16","hashOfConfig":"15"},{"size":6484,"mtime":1669721658130,"results":"17","hashOfConfig":"15"},{"size":1927,"mtime":1669628296846,"results":"18","hashOfConfig":"15"},{"size":5034,"mtime":1669721635228,"results":"19","hashOfConfig":"15"},{"size":3605,"mtime":1669596723510,"results":"20","hashOfConfig":"15"},{"size":1130,"mtime":1669597075551,"results":"21","hashOfConfig":"15"},{"size":473,"mtime":1669596584470,"results":"22","hashOfConfig":"15"},{"size":4196,"mtime":1669639204594,"results":"23","hashOfConfig":"15"},{"size":5014,"mtime":1669596934334,"results":"24","hashOfConfig":"15"},{"size":981,"mtime":1669590396020,"results":"25","hashOfConfig":"15"},{"size":1576,"mtime":1669597369695,"results":"26","hashOfConfig":"15"},{"size":4334,"mtime":1669722021258,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"sygvsk",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/reportWebVitals.js",[],[],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/index.tsx",[],[],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/App.tsx",["75","76","77","78","79","80","81"],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/utils.ts",["82","83","84","85","86","87"],[],"import { urlToHttpOptions } from \"url\";\nimport { Card } from \"./interfaces/card\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport { equal } from \"assert\";\n\nexport const exportPath: string = \"./exportedCards/\";\n\nexport function arrayEquality(arrayOne: string[], arrayTwo: string[]): boolean {\n    if (arrayOne.length !== arrayTwo.length) {\n        return false;\n    };\n    let isEqual = true;\n    arrayOne.map((string: string, index: number): void => {\n        if (string !== arrayTwo[index]) {\n            isEqual = false;\n        }\n    });\n    return isEqual;\n}\n\nexport function cardEquality(cardOne: Card, cardTwo: Card): boolean {\n    const isEqual: boolean =\n        cardOne.frontText === cardTwo.frontText &&\n        cardOne.backText === cardTwo.backText &&\n        arrayEquality(cardOne.cardDecks, cardTwo.cardDecks) &&\n        cardOne.cardHint === cardTwo.cardHint &&\n        cardOne.cardColor === cardTwo.cardColor &&\n        cardOne.accuracy === cardTwo.accuracy;\n    return isEqual;\n}\n\nexport function deckEquality(deckOne: Card[], deckTwo: Card[]): boolean {\n    let isEqual: boolean = true;\n    if (deckOne.length === 0 || deckOne.length !== deckTwo.length){\n        isEqual = false;\n    }\n    else {\n        deckOne.map((card: Card, index: number): void => {\n            if (cardEquality(card, deckTwo[index]) !== true) {\n                isEqual = false;\n            }\n        });\n    }\n    return isEqual;\n}\n\n\nexport function stringToCard(string: string): Card {\n    const cardArray: string[] = string.split(\"<|>\")\n    const card: Card = {\n        // The ID of imported cards needs to be assigned at the time of import based on the collection\n        id: -1,\n        cardColor: cardArray[0],\n        frontText: cardArray[1],\n        backText: cardArray[2],\n        cardHint: cardArray[3],\n        cardDecks: cardArray[4].split(\",\"),\n        accuracy: Number(cardArray[5])\n    }\n    return card;\n}  ","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/CollectPage.tsx",["88","89","90","91","92"],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/HomePage.tsx",["93"],[],"import React, {useState, Component} from \"react\";\nimport './HomePage.css';\nimport FlashCard from './components/Flashcard'\nimport ParseCard from './components/Parsecard'\n\n// class App extends React.Component<{ message: string }, { count: number }> {\n//     state = { count: 0 };\n//     render() {\n//       return (\n//         <div onClick={() => this.increment(1)}>\n//           {this.props.message} {this.state.count}\n//         </div>\n//       );\n//     }\n//     increment = (amt: number) => {\n//       // like this\n//       this.setState((state) => ({\n//         count: state.count + amt,\n//       }));\n//     };\n//   }\n\ninterface Props {\n    cardType: string;\n    addCard: (cFrontText: string, cBackText: string, cCardHint: string, cCardDeck: string) => void;\n};\ninterface State {\n    cardType: string,\n    frontText: string,\n    backText: string,\n    cardHint: string,\n    cardDeck: string,\n    addCard: (cFrontText: string, cBackText: string, cCardHint: string, cCardDeck: string) => void\n};\n\nclass HomePage extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            cardType: \"FlashCard\",\n            frontText: \"\",\n            backText: \"\",\n            cardHint: \"\",\n            cardDeck: \"\",\n            addCard: this.props.addCard\n        }\n        this.toggleCardType = this.toggleCardType.bind(this);\n    }\n    \n\n    updateHandler = (newFront: string, newBack: string, newHint: string, newDeck: string): void => {\n        console.log(\"updating!\");\n        this.setState({frontText: newFront,\n                        backText: newBack,\n                        cardHint: newHint,\n                        cardDeck: newDeck});\n    }\n\n    addCardHandler = (event: MouseEvent): void => {\n        this.setState({frontText: \"\",\n                        backText: \"\",\n                        cardHint: \"\",\n                        cardDeck: \"\"}, () => {console.log(\"New HomePage state frontText: \", this.state.frontText)});\n                    \n        //Now we have to call the page above, to app.js\n        console.log(\"Trying to add Card! in HomePage, got: \", this.state.frontText, \"Back: \", this.state.backText);\n        //! Changed newDeckArray to be a string, assuming that the user only adds new cards to at most 1 deck\n        let newDeckArray = this.state.cardDeck;\n        this.props.addCard(this.state.frontText, this.state.backText, this.state.cardHint, newDeckArray)\n    }\n\n    toggleCardType = () => {\n        if (this.state.cardType ===\"FlashCard\") {\n            this.setState({cardType: \"ParseCard\"});\n        }\n        else {\n            this.setState({cardType: \"FlashCard\"});\n        }\n        console.log(\"Toggling Card!\");\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.cardType === \"FlashCard\" && <FlashCard type={\"Normal\"} frontText={this.state.frontText} backText={this.state.backText} cardHint={this.state.cardHint} cardDeck={this.state.cardDeck} update = {this.updateHandler}></FlashCard>}\n                {this.state.cardType === \"ParseCard\" && <ParseCard cardDeck={this.state.cardDeck}></ParseCard>}\n                <div className=\"HomeCardButtons\">\n                    <label className=\"Switch\">\n                        <input type=\"checkbox\"></input>\n                        <span className = \"slider round\" onClick={() => this.toggleCardType}></span>\n                    </label>\n                    <button className=\"AddCardButton\" onClick={() => this.addCardHandler}>&#43;</button>\n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nexport default HomePage;","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/QuizPage.tsx",["94","95","96","97","98","99","100"],[],"import React, {useState, Component} from \"react\";\nimport './QuizPage.css';\nimport FlashCard from './components/Flashcard'\nimport { Card } from \"../interfaces/card\";\nimport { cardEquality, arrayEquality, exportPath, deckEquality, stringToCard } from \"../utils\";\n\ninterface Props {\n    cardArray: Card[];\n}\ninterface State {\n    cardArray: Card[],\n    frontText: string,\n    backText: string,\n    cardHint: string,\n    cardDecks: string[],\n    cardType: string\n}\nclass QuizPage extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            cardArray: this.props.cardArray,\n            frontText: \"\",\n            backText: \"\",\n            cardHint: \"\",\n            cardDecks: [],\n            cardType: \"QuizCard\",\n        }\n    }\n\n    nextCard = () => {\n        \n    }\n\n    render() {\n        return (\n            <div>\n                {/* <FlashCard type={\"Quiz\"} frontText={this.state.frontText} backText={this.state.backText} cardHint={this.state.cardHint} cardDecks={this.state.cardDecks}></FlashCard> */}\n            </div>\n        )\n    }\n}\n\nexport default QuizPage;\n","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/ImportPage.tsx",["101"],[],"import React, {useState, Component} from \"react\";\n/*import './ImportPage.css';*/\nimport ImportCard from './components/Importcard';\n\ninterface Props {\n}\ninterface State {\n}\nclass ImportPage extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <ImportCard></ImportCard>\n            </div>\n        )\n    }\n}\n\nexport default ImportPage;","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Colltab.tsx",["102","103","104","105","106","107"],[],"import React, {Component} from 'react';\nimport './Colltab.css';\nimport * as fs from \"fs\";\nimport { Card } from \"../../interfaces/card\";\nimport { cardEquality, arrayEquality, exportPath, deckEquality, stringToCard } from \"../../utils\";\n\ninterface Props {\n    card: Card,\n    deleted: (targetCard: Card) => void,\n    updated: (oldCard: Card, newFront: string, newBack: string, newHint:string, newDecks: string[]) => void\n}\ninterface State {\n    render: boolean,\n    localCard: Card\n}\nclass CollTab extends Component<Props, State>{    //Still need to figure out how to pass changes up from the tab!\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            render: false,\n            localCard: this.props.card\n        }\n        this.toggleContent = this.toggleContent.bind(this);\n    }\n\n\n    toggleContent() { //This currently works although it is quite ugly and doesn't do any animation\n        this.setState({render: !this.state.render});\n        console.log(\"Changing the render!\", this.state.render);\n    }\n\n    handleFrontChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({localCard: {...this.state.localCard, frontText: event.currentTarget.value}});\n    }\n\n    handleBackChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({localCard: {...this.state.localCard, backText: event.currentTarget.value}});\n    }\n\n    handleHintChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({localCard: {...this.state.localCard, cardHint: event.currentTarget.value}});\n    }\n    \n    handleDecksChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({localCard: {...this.state.localCard, cardDecks: [event.currentTarget.value]}});\n    }\n\n\n    render() {\n        const buttonStyle = {\n            backgroundColor: 'white',\n            font: 'inherit',\n            border: '1px solid blue',\n            padding: '8px',\n            cursor: 'pointer'\n        };\n    return (\n        <div className=\"CollTab\">\n            <button type=\"button\" onClick={this.toggleContent} className='collapsible'>{this.state.localCard.frontText}</button>\n            <div \n                className=\"content\"\n                style={{maxHeight: this.state.render ? '400px': '0px'}}>\n                <div className=\"row\">\n                    <div className=\"column\">\n                        {/* <h>Current Card Values:</h> */}\n                        <p>Current Card Values:</p>\n                        <p>Front Text: {this.props.card.frontText}</p>\n                        <p>Back Text: {this.props.card.backText}</p>\n                        <p>Card Hint: {this.props.card.cardHint} </p>\n                        <p>Card Decks: {this.props.card.cardDecks}</p>\n                    </div>\n                    <div className=\"column\">\n                        <p>Please enter new values:</p>\n                        {/* <h>Please enter new values:</h> */}\n                        <p><input type=\"text\" onChange={this.handleFrontChange} value={this.state.localCard.frontText}></input></p>\n                        <p><input type=\"text\" onChange={this.handleBackChange} value={this.state.localCard.backText}></input></p>\n                        <p><input type=\"text\" onChange={this.handleHintChange} value={this.state.localCard.cardHint}></input></p>\n                        <p><input type=\"text\" onChange={this.handleDecksChange} value={this.state.localCard.cardDecks}></input></p>\n                    </div>\n                </div>\n                <div className=\"CollTabButtons\">\n                    <button\n                        style={buttonStyle}\n                        onClick={() => this.props.updated(this.props.card, this.state.localCard.frontText, this.state.localCard.backText, this.state.localCard.cardHint, this.state.localCard.cardDecks)}>Update Card</button>\n                    <button\n                        className=\"deleteButton\"\n                        style={buttonStyle}\n                        onClick={() => this.props.deleted(this.props.card)}>Delete Card</button>\n                </div>\n            </div>\n        </div>\n    )\n    }\n};\n\nexport default CollTab;","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Flashcard.tsx",["108","109"],[],"import React, {ChangeEvent, Component, PropsWithChildren} from 'react';\nimport './Flashcard.css';\n\ninterface Props {\n    type: string,\n    frontText: string,\n    backText: string,\n    cardHint: string,\n    cardDeck: string,\n    update: (newFront: string, newBack: string, newHint: string, newDeck: string) => void\n};\ninterface State {\n    side: string,\n    type: string,\n    localCardFront: string,\n    localCardBack: string,\n    localcardDeck: string,\n    localCardHint: string,\n    flipState: boolean\n};\n\n\nclass FlashCard extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            side: \"front\",\n            type: this.props.type,\n            localCardFront: this.props.frontText,\n            localCardBack: this.props.backText,\n            localcardDeck: this.props.cardDeck,\n            localCardHint: this.props.cardHint,\n            flipState: false\n        }\n        this.flipCard = this.flipCard.bind(this);\n    }\n\n    flipCard = () => {\n        console.log(\"Flipping from: \", this.state.side);\n        this.setState({flipState: !this.state.flipState});\n        if (this.state.side === \"front\") {\n            this.setState({side: \"back\"});\n        }\n        else {\n            this.setState({side: \"front\"});\n        }\n        console.log(\"flipState:\", this.state.flipState);\n        console.log(this.state.localCardFront);\n    }\n\n    handleFrontChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.type !== \"Normal\") {\n            return;\n        }\n        console.log(\"Changing the front!\");\n        let newFront = event.currentTarget.value;\n        this.setState({localCardFront: newFront});\n        console.log(\"NewState for front: \", newFront);\n        this.props.update(newFront, this.state.localCardBack, this.state.localCardHint, this.state.localcardDeck);\n\n    }\n\n    handleBackChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.type !== \"Normal\") {\n            return;\n        }\n        let newBack = event.currentTarget.value;\n        this.setState({localCardBack: newBack});\n        this.props.update(this.state.localCardFront, newBack, this.state.localCardHint, this.state.localcardDeck);\n\n    }\n\n    handleHintChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.type !== \"Normal\") {\n            return;\n        }\n        let newHint = event.currentTarget.value;\n        this.setState({localCardHint: newHint});\n        this.props.update(this.state.localCardFront, this.state.localCardBack, newHint, this.state.localcardDeck);\n\n    }\n\n    handleDecksChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.type !== \"Normal\") {\n            return;\n        }\n        let newDecks = event.currentTarget.value;\n        this.setState({localcardDeck: newDecks});\n        this.props.update(this.state.localCardFront, this.state.localCardBack, this.state.localCardHint, newDecks);\n    }\n\n\n    render() {\n        return (\n            <div className=\"FlashCard\">\n                <div className=\"FlashCardInner\" style={{transform: this.state.flipState ? \"rotateX(180deg)\": \"\"}}>\n                    <div className=\"FlashCardFront\">\n                        {/* <top> */}\n                        <ul>\n                            <li><span className=\"Dot\"></span></li>\n                            <li><input type=\"CardHint\" placeholder=\"Notes/Hints\" onChange={this.handleHintChange} value={this.props.cardHint} style={{opacity: this.props.type === \"Quiz\" ? \"0\": \"1\"}}></input></li>\n                            <li><input type=\"CardDeck\" placeholder=\"Deck\" onChange={this.handleDecksChange} className=\"CardDeck\" value={this.props.cardDeck}></input></li>\n                        </ul>\n                        {/* </top> */}\n                        <input type=\"CardFrontText\" placeholder=\"Write\" onChange = {this.handleFrontChange} value={this.props.frontText}></input>\n                        <button className=\"FlipCardButton\" onClick={this.flipCard}></button>\n                    </div>\n                    <div className=\"FlashCardBack\">\n                        {/* <top> */}\n                        <ul>\n                            <li><span className=\"Dot\"></span></li>\n                            <li><input type=\"CardHint\" placeholder=\"Notes/Hints\" onChange={this.handleHintChange} value={this.props.cardHint}></input></li>\n                            <li><input type=\"CardDeck\" placeholder=\"Deck\" onChange={this.handleDecksChange} className=\"CardDeck\" value={this.props.cardDeck}></input></li>\n                        </ul>\n                        {/* </top> */}\n                        <input type=\"CardFrontText\" placeholder=\"Write Back\" onChange = {this.handleBackChange} value={this.props.backText}></input>\n                        <button className=\"FlipCardButton\" onClick={this.flipCard}></button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default FlashCard","/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Parsecard.tsx",[],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Importcard.tsx",[],[],"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/importExport.ts",["110","111","112","113","114","115","116","117"],[],{"ruleId":"118","severity":1,"message":"119","line":9,"column":10,"nodeType":"120","messageId":"121","endLine":9,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":10,"column":24,"nodeType":"120","messageId":"121","endLine":10,"endColumn":37},{"ruleId":"118","severity":1,"message":"123","line":10,"column":39,"nodeType":"120","messageId":"121","endLine":10,"endColumn":49},{"ruleId":"118","severity":1,"message":"124","line":10,"column":51,"nodeType":"120","messageId":"121","endLine":10,"endColumn":63},{"ruleId":"118","severity":1,"message":"125","line":10,"column":65,"nodeType":"120","messageId":"121","endLine":10,"endColumn":77},{"ruleId":"126","severity":1,"message":"127","line":39,"column":42,"nodeType":"128","messageId":"129","endLine":39,"endColumn":44},{"ruleId":"126","severity":1,"message":"127","line":61,"column":38,"nodeType":"128","messageId":"129","endLine":61,"endColumn":40},{"ruleId":"118","severity":1,"message":"130","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"131","line":3,"column":13,"nodeType":"120","messageId":"121","endLine":3,"endColumn":15},{"ruleId":"118","severity":1,"message":"132","line":4,"column":13,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":14,"column":56,"nodeType":"128","messageId":"129","endLine":14,"endColumn":58},{"ruleId":"126","severity":1,"message":"127","line":39,"column":55,"nodeType":"128","messageId":"129","endLine":39,"endColumn":57},{"ruleId":"118","severity":1,"message":"133","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":7,"column":24,"nodeType":"120","messageId":"121","endLine":7,"endColumn":37},{"ruleId":"118","severity":1,"message":"123","line":7,"column":39,"nodeType":"120","messageId":"121","endLine":7,"endColumn":49},{"ruleId":"118","severity":1,"message":"124","line":7,"column":51,"nodeType":"120","messageId":"121","endLine":7,"endColumn":63},{"ruleId":"118","severity":1,"message":"125","line":7,"column":65,"nodeType":"120","messageId":"121","endLine":7,"endColumn":77},{"ruleId":"118","severity":1,"message":"133","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"133","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"134","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"118","severity":1,"message":"135","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":22},{"ruleId":"118","severity":1,"message":"122","line":5,"column":24,"nodeType":"120","messageId":"121","endLine":5,"endColumn":37},{"ruleId":"118","severity":1,"message":"123","line":5,"column":39,"nodeType":"120","messageId":"121","endLine":5,"endColumn":49},{"ruleId":"118","severity":1,"message":"124","line":5,"column":51,"nodeType":"120","messageId":"121","endLine":5,"endColumn":63},{"ruleId":"118","severity":1,"message":"125","line":5,"column":65,"nodeType":"120","messageId":"121","endLine":5,"endColumn":77},{"ruleId":"118","severity":1,"message":"133","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"131","line":3,"column":13,"nodeType":"120","messageId":"121","endLine":3,"endColumn":15},{"ruleId":"118","severity":1,"message":"135","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":22},{"ruleId":"118","severity":1,"message":"122","line":5,"column":24,"nodeType":"120","messageId":"121","endLine":5,"endColumn":37},{"ruleId":"118","severity":1,"message":"123","line":5,"column":39,"nodeType":"120","messageId":"121","endLine":5,"endColumn":49},{"ruleId":"118","severity":1,"message":"124","line":5,"column":51,"nodeType":"120","messageId":"121","endLine":5,"endColumn":63},{"ruleId":"118","severity":1,"message":"125","line":5,"column":65,"nodeType":"120","messageId":"121","endLine":5,"endColumn":77},{"ruleId":"118","severity":1,"message":"136","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":27},{"ruleId":"118","severity":1,"message":"137","line":1,"column":40,"nodeType":"120","messageId":"121","endLine":1,"endColumn":57},{"ruleId":"118","severity":1,"message":"130","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"132","line":3,"column":13,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":5,"column":24,"nodeType":"120","messageId":"121","endLine":5,"endColumn":37},{"ruleId":"118","severity":1,"message":"124","line":5,"column":51,"nodeType":"120","messageId":"121","endLine":5,"endColumn":63},{"ruleId":"126","severity":1,"message":"127","line":80,"column":39,"nodeType":"128","messageId":"129","endLine":80,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":84,"column":42,"nodeType":"128","messageId":"129","endLine":84,"endColumn":44},{"ruleId":"126","severity":1,"message":"127","line":87,"column":57,"nodeType":"128","messageId":"129","endLine":87,"endColumn":59},"@typescript-eslint/no-unused-vars","'equal' is defined but never used.","Identifier","unusedVar","'arrayEquality' is defined but never used.","'exportPath' is defined but never used.","'deckEquality' is defined but never used.","'stringToCard' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'urlToHttpOptions' is defined but never used.","'fs' is defined but never used.","'path' is defined but never used.","'useState' is defined but never used.","'FlashCard' is defined but never used.","'cardEquality' is defined but never used.","'ChangeEvent' is defined but never used.","'PropsWithChildren' is defined but never used."]