{"ast":null,"code":"export const exportPath = \"./exportedCards/\";\nexport function arrayEquality(arrayOne, arrayTwo) {\n  if (arrayOne.length !== arrayTwo.length) {\n    return false;\n  }\n  ;\n  let isEqual = true;\n  arrayOne.map((string, index) => {\n    if (string !== arrayTwo[index]) {\n      isEqual = false;\n    }\n  });\n  return isEqual;\n}\nexport function cardEquality(cardOne, cardTwo) {\n  const isEqual = cardOne.frontText === cardTwo.frontText && cardOne.backText === cardTwo.backText && arrayEquality(cardOne.cardDecks, cardTwo.cardDecks) && cardOne.accuracy === cardTwo.accuracy;\n  return isEqual;\n}\nexport function deckEquality(deckOne, deckTwo) {\n  let isEqual = true;\n  if (deckOne.length === 0 || deckOne.length !== deckTwo.length) {\n    isEqual = false;\n  } else {\n    deckOne.map((card, index) => {\n      if (cardEquality(card, deckTwo[index]) !== true) {\n        isEqual = false;\n      }\n    });\n  }\n  return isEqual;\n}\n\n// export function stringToCard(string: string): Card {\n//     const cardArray: string[] = string.split(\"<|>\")\n//     const card: Card = {\n//         id: 0,\n//         cardColor: \"Red\",\n//         frontText: cardArray[0],\n//         backText: cardArray[1],\n//         cardHint: cardArray[2],\n//         cardDecks: cardArray[3].split(\",\"),\n//         accuracy: Number(cardArray[4])\n//     }\n//     return card;\n// }","map":{"version":3,"names":["exportPath","arrayEquality","arrayOne","arrayTwo","length","isEqual","map","string","index","cardEquality","cardOne","cardTwo","frontText","backText","cardDecks","accuracy","deckEquality","deckOne","deckTwo","card"],"sources":["/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/utils.ts"],"sourcesContent":["import { urlToHttpOptions } from \"url\";\nimport { Card } from \"./interfaces/card\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport { equal } from \"assert\";\n\nexport const exportPath: string = \"./exportedCards/\";\n\nexport function arrayEquality(arrayOne: string[], arrayTwo: string[]): boolean {\n    if (arrayOne.length !== arrayTwo.length) {\n        return false;\n    };\n    let isEqual = true;\n    arrayOne.map((string: string, index: number): void => {\n        if (string !== arrayTwo[index]) {\n            isEqual = false;\n        }\n    });\n    return isEqual;\n}\n\nexport function cardEquality(cardOne: Card, cardTwo: Card): boolean {\n    const isEqual: boolean =\n        cardOne.frontText === cardTwo.frontText &&\n        cardOne.backText === cardTwo.backText &&\n        arrayEquality(cardOne.cardDecks, cardTwo.cardDecks) &&\n        cardOne.accuracy === cardTwo.accuracy;\n    return isEqual;\n}\n\nexport function deckEquality(deckOne: Card[], deckTwo: Card[]): boolean {\n    let isEqual: boolean = true;\n    if (deckOne.length === 0 || deckOne.length !== deckTwo.length){\n        isEqual = false;\n    }\n    else {\n        deckOne.map((card: Card, index: number): void => {\n            if (cardEquality(card, deckTwo[index]) !== true) {\n                isEqual = false;\n            }\n        });\n    }\n    return isEqual;\n}\n\n\n// export function stringToCard(string: string): Card {\n//     const cardArray: string[] = string.split(\"<|>\")\n//     const card: Card = {\n//         id: 0,\n//         cardColor: \"Red\",\n//         frontText: cardArray[0],\n//         backText: cardArray[1],\n//         cardHint: cardArray[2],\n//         cardDecks: cardArray[3].split(\",\"),\n//         accuracy: Number(cardArray[4])\n//     }\n//     return card;\n// }  "],"mappings":"AAMA,OAAO,MAAMA,UAAkB,GAAG,kBAAkB;AAEpD,OAAO,SAASC,aAAa,CAACC,QAAkB,EAAEC,QAAkB,EAAW;EAC3E,IAAID,QAAQ,CAACE,MAAM,KAAKD,QAAQ,CAACC,MAAM,EAAE;IACrC,OAAO,KAAK;EAChB;EAAC;EACD,IAAIC,OAAO,GAAG,IAAI;EAClBH,QAAQ,CAACI,GAAG,CAAC,CAACC,MAAc,EAAEC,KAAa,KAAW;IAClD,IAAID,MAAM,KAAKJ,QAAQ,CAACK,KAAK,CAAC,EAAE;MAC5BH,OAAO,GAAG,KAAK;IACnB;EACJ,CAAC,CAAC;EACF,OAAOA,OAAO;AAClB;AAEA,OAAO,SAASI,YAAY,CAACC,OAAa,EAAEC,OAAa,EAAW;EAChE,MAAMN,OAAgB,GAClBK,OAAO,CAACE,SAAS,KAAKD,OAAO,CAACC,SAAS,IACvCF,OAAO,CAACG,QAAQ,KAAKF,OAAO,CAACE,QAAQ,IACrCZ,aAAa,CAACS,OAAO,CAACI,SAAS,EAAEH,OAAO,CAACG,SAAS,CAAC,IACnDJ,OAAO,CAACK,QAAQ,KAAKJ,OAAO,CAACI,QAAQ;EACzC,OAAOV,OAAO;AAClB;AAEA,OAAO,SAASW,YAAY,CAACC,OAAe,EAAEC,OAAe,EAAW;EACpE,IAAIb,OAAgB,GAAG,IAAI;EAC3B,IAAIY,OAAO,CAACb,MAAM,KAAK,CAAC,IAAIa,OAAO,CAACb,MAAM,KAAKc,OAAO,CAACd,MAAM,EAAC;IAC1DC,OAAO,GAAG,KAAK;EACnB,CAAC,MACI;IACDY,OAAO,CAACX,GAAG,CAAC,CAACa,IAAU,EAAEX,KAAa,KAAW;MAC7C,IAAIC,YAAY,CAACU,IAAI,EAAED,OAAO,CAACV,KAAK,CAAC,CAAC,KAAK,IAAI,EAAE;QAC7CH,OAAO,GAAG,KAAK;MACnB;IACJ,CAAC,CAAC;EACN;EACA,OAAOA,OAAO;AAClB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}