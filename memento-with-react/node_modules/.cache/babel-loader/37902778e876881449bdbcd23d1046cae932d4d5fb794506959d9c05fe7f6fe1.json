{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/Memento Project Git/TeamC/memento-with-react/src/pages/QuizPage.js\";\nimport React, { useState, Component } from \"react\";\nimport './QuizPage.css';\nimport FlashCard from './components/Flashcard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuizPage extends Component {\n  constructor(props) {\n    super(props);\n    this.flipCardToggler = event => {\n      console.log(\"Toggling flipCard in HomePage.js\");\n      this.setState({\n        flipState: !this.state.flipState\n      });\n    };\n    this.nextCardHandler = rightOrWrong => {\n      this.setState({\n        flipState: false\n      });\n      if (rightOrWrong === \"Correct\") {\n        console.log(\"The user was correct!\");\n        //Do relevant stats stuff\n      } else {\n        console.log(\"The user was Incorrect!\");\n        //Do relevant stats stuff\n      }\n\n      if (this.state.currentIndex + 1 < this.props.cardArray.length) {\n        console.log(\"Current Index: \", this.state.currentIndex, \"arrayLength: \", this.props.cardArray.length, \"Starting to display: \", this.props.cardArray[this.state.currentIndex + 1].frontText);\n        this.setState({\n          currentIndex: this.state.currentIndex + 1,\n          currentFrontText: this.props.cardArray[this.state.currentIndex + 1].frontText,\n          currentBackText: this.props.cardArray[this.state.currentIndex + 1].backText,\n          currentCardHint: this.props.cardArray[this.state.currentIndex + 1].cardHint,\n          currentCardDecks: this.props.cardArray[this.state.currentIndex + 1].cardDecks,\n          showHint: false,\n          flipState: false\n        });\n      } else {\n        //We have gone through all the cards and should now display a message to the user about how many they god right...\n        this.setState({\n          done: true\n        });\n      }\n    };\n    this.state = {\n      cardArray: this.props.cardArray,\n      currentFrontText: this.props.cardArray.length > 0 ? this.props.cardArray[0].frontText : \"\",\n      currentBackText: this.props.cardArray.length > 0 ? this.props.cardArray[0].backText : \"\",\n      currentCardHint: this.props.cardArray.length > 0 ? this.props.cardArray[0].cardHint : \"\",\n      currentCardDecks: this.props.cardArray.length > 0 ? this.props.cardArray[0].cardDecks : \"\",\n      cardType: \"QuizCard\",\n      currentIndex: 0,\n      done: false,\n      showHint: false,\n      flipState: false\n    };\n    this.nextCardHandler = this.nextCardHandler.bind(this);\n  }\n  flipThenNext(rightOrWrong) {\n    if (this.state.flipState === false) {\n      //We want this to happen immediately\n      this.nextCardHandler(rightOrWrong);\n      return;\n    }\n    //Otherwise we want to flip the card over and THEN change the card values\n    this.setState({\n      flipState: false\n    });\n    setTimeout(() => {\n      this.nextCardHandler(rightOrWrong);\n    }, 500);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.done !== true && this.props.cardArray.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FlashCard, {\n          type: \"Quiz\",\n          frontText: this.state.currentFrontText,\n          backText: this.state.currentBackText,\n          cardHint: this.state.currentCardHint,\n          cardDecks: this.state.currentCardDecks,\n          showHint: this.state.showHint,\n          flipState: this.state.flipState,\n          flipCard: this.flipCardToggler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"QuizPageButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"CorrectButton\",\n            \"data-testid\": \"CorrectButton\",\n            onClick: () => this.flipThenNext(\"Correct\"),\n            children: \"Correct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"IncorrectButton\",\n            \"data-testid\": \"IncorrectButton\",\n            onClick: () => this.flipThenNext(\"Incorrect\"),\n            children: \"Incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 83\n      }, this), this.state.done === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Looks like that is all the cards!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default QuizPage;","map":{"version":3,"names":["React","useState","Component","FlashCard","QuizPage","constructor","props","flipCardToggler","event","console","log","setState","flipState","state","nextCardHandler","rightOrWrong","currentIndex","cardArray","length","frontText","currentFrontText","currentBackText","backText","currentCardHint","cardHint","currentCardDecks","cardDecks","showHint","done","cardType","bind","flipThenNext","setTimeout","render"],"sources":["/home/anthony/Desktop/Memento Project Git/TeamC/memento-with-react/src/pages/QuizPage.js"],"sourcesContent":["import React, {useState, Component} from \"react\";\nimport './QuizPage.css';\nimport FlashCard from './components/Flashcard.js'\n\n\nclass QuizPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            cardArray: this.props.cardArray,\n            currentFrontText: this.props.cardArray.length > 0 ? this.props.cardArray[0].frontText: \"\",\n            currentBackText: this.props.cardArray.length > 0 ? this.props.cardArray[0].backText: \"\",\n            currentCardHint: this.props.cardArray.length > 0 ? this.props.cardArray[0].cardHint: \"\",\n            currentCardDecks: this.props.cardArray.length > 0 ? this.props.cardArray[0].cardDecks: \"\",\n            cardType: \"QuizCard\",\n            currentIndex: 0,\n            done: false,\n            showHint: false,\n            flipState: false\n        }\n        this.nextCardHandler = this.nextCardHandler.bind(this);\n    }\n\n\n    flipCardToggler = (event) => {\n        console.log(\"Toggling flipCard in HomePage.js\")\n        this.setState({flipState: !this.state.flipState});\n    }\n\n    flipThenNext(rightOrWrong) {\n        if (this.state.flipState === false) {\n            //We want this to happen immediately\n            this.nextCardHandler(rightOrWrong);\n            return;\n        }\n        //Otherwise we want to flip the card over and THEN change the card values\n        this.setState({flipState: false});\n        setTimeout(() => {\n            this.nextCardHandler(rightOrWrong);\n        }, 500);\n    }\n\n    nextCardHandler = (rightOrWrong) => {\n        this.setState({flipState: false});\n        if (rightOrWrong === \"Correct\") {\n            console.log(\"The user was correct!\");\n            //Do relevant stats stuff\n        }\n        else {\n            console.log(\"The user was Incorrect!\");\n            //Do relevant stats stuff\n        }\n        if (this.state.currentIndex + 1 < this.props.cardArray.length) {\n            console.log(\"Current Index: \", this.state.currentIndex, \"arrayLength: \", this.props.cardArray.length, \"Starting to display: \", this.props.cardArray[this.state.currentIndex + 1].frontText);\n            this.setState({currentIndex: this.state.currentIndex + 1,\n                            currentFrontText: this.props.cardArray[this.state.currentIndex + 1].frontText,\n                            currentBackText: this.props.cardArray[this.state.currentIndex + 1].backText,\n                            currentCardHint: this.props.cardArray[this.state.currentIndex + 1].cardHint,\n                            currentCardDecks: this.props.cardArray[this.state.currentIndex + 1].cardDecks,\n                            showHint: false,\n                            flipState: false\n            });\n        }\n        else {\n            //We have gone through all the cards and should now display a message to the user about how many they god right...\n            this.setState({done: true});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {(this.state.done !== true && this.props.cardArray.length > 0) && <div>\n                    <FlashCard type={\"Quiz\"} frontText={this.state.currentFrontText} backText={this.state.currentBackText} cardHint={this.state.currentCardHint} cardDecks={this.state.currentCardDecks} showHint={this.state.showHint} flipState={this.state.flipState} flipCard={this.flipCardToggler}></FlashCard>\n                    <div className=\"QuizPageButtons\">\n                        <button className=\"CorrectButton\" data-testid=\"CorrectButton\" onClick={() => this.flipThenNext(\"Correct\")}>Correct</button>\n                        <button className=\"IncorrectButton\" data-testid=\"IncorrectButton\" onClick={() => this.flipThenNext(\"Incorrect\")}>Incorrect</button>\n                    </div>\n                </div>}\n                {this.state.done === true && <div>\n                    Looks like that is all the cards!\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}