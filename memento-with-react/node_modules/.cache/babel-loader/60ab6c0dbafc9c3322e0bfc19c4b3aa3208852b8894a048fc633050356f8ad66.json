{"ast":null,"code":"var _jsxFileName = \"/home/josh/Desktop/COS520/IntegratedJS/TeamC/memento-with-react/src/pages/components/Importcard.jsx\";\nimport React, { Component, ReactElement, useCallback, useState, ChangeEvent } from 'react';\nimport './Importcard.css';\n// import { Card } from \"../../interfaces/card\";\nimport { exportCards, importCards } from '../../importExport';\n\n// interface Props {\n//     collection: Card[],\n//     parseInputs: (textInput: string, currentCollection: Card[], deckName: string) => Card[],\n//     updateCollection: (childCollection: Card[]) => void\n// }\n// interface State {\n//     dragActive: boolean,\n//     collection: Card[]\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImportCard extends Component {\n  constructor(props) {\n    super(props);\n    this.changeHandler = target => {\n      if (!target.currentTarget.files) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = () => {\n        if (reader.result) {\n          this.readerChange(reader.result);\n        }\n      };\n      reader.readAsText(target.currentTarget.files[0]);\n    };\n    this.state = {\n      dragActive: false,\n      collection: this.props.propCollection\n    };\n  }\n  //Split this into its own function so that the function made by reader.onload can access \"this\" and its state\n  //  There might well be a cleaner way to do it though\n  readerChange(result) {\n    // console.log(\"Parsed state length: \" + this.props.parseInputs(result, this.state.collection, \"\").length);\n    this.setState({\n      collection: this.props.parseInputs(result, this.state.collection, \"\")\n    }, () => {\n      this.props.updateCollection(this.state.collection);\n    });\n    // console.log(\"Updated state length: \" + this.state.collection.length);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"fileUpload\",\n        type: \"file\",\n        id: \"fileUpload\",\n        onChange: this.changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.collection.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ImportCard;","map":{"version":3,"names":["React","Component","ReactElement","useCallback","useState","ChangeEvent","exportCards","importCards","ImportCard","constructor","props","changeHandler","target","currentTarget","files","reader","FileReader","onload","result","readerChange","readAsText","state","dragActive","collection","propCollection","setState","parseInputs","updateCollection","render","length"],"sources":["/home/josh/Desktop/COS520/IntegratedJS/TeamC/memento-with-react/src/pages/components/Importcard.jsx"],"sourcesContent":["import React, {Component, ReactElement, useCallback, useState, ChangeEvent} from 'react';\nimport './Importcard.css';\n// import { Card } from \"../../interfaces/card\";\nimport { exportCards, importCards } from '../../importExport';\n\n// interface Props {\n//     collection: Card[],\n//     parseInputs: (textInput: string, currentCollection: Card[], deckName: string) => Card[],\n//     updateCollection: (childCollection: Card[]) => void\n// }\n// interface State {\n//     dragActive: boolean,\n//     collection: Card[]\n// }\nclass ImportCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dragActive: false,\n            collection: this.props.propCollection\n        }\n    };\n\n\n    //Split this into its own function so that the function made by reader.onload can access \"this\" and its state\n    //  There might well be a cleaner way to do it though\n    readerChange(result) {\n        // console.log(\"Parsed state length: \" + this.props.parseInputs(result, this.state.collection, \"\").length);\n        this.setState({collection: this.props.parseInputs(result, this.state.collection, \"\")}, () => {\n            this.props.updateCollection(this.state.collection)\n        }\n        );\n        // console.log(\"Updated state length: \" + this.state.collection.length);\n    }\n\n    changeHandler = ( target) => {\n        if (!target.currentTarget.files){\n            return\n        }\n        const reader = new FileReader();\n        reader.onload = () => {\n            if (reader.result) {\n                this.readerChange(reader.result)\n            }\n        };\n        reader.readAsText(target.currentTarget.files[0]);\n    };\n\n\n    render() {\n        return (\n            <div>\n                {/* <div className=\"ImportCard\">\n                    <form id=\"form-file-upload\" onDragEnter={() => this.dragHandler} onSubmit={() => {}}></form>\n                    <div>Eventually you will drag files here!</div>\n                </div> */}\n                <input data-testid=\"fileUpload\" type=\"file\" id=\"fileUpload\" onChange={this.changeHandler} />                \n                <div>\n                    {this.state.collection.length}\n                </div>\n            </div>\n        )\n    }\n}\nexport default ImportCard;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,YAAY,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AACxF,OAAO,kBAAkB;AACzB;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,oBAAoB;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,MAAMC,UAAU,SAASP,SAAS,CAAC;EAC/BQ,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAA,KAmBhBC,aAAa,GAAKC,MAAM,IAAK;MACzB,IAAI,CAACA,MAAM,CAACC,aAAa,CAACC,KAAK,EAAC;QAC5B;MACJ;MACA,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QAClB,IAAIF,MAAM,CAACG,MAAM,EAAE;UACf,IAAI,CAACC,YAAY,CAACJ,MAAM,CAACG,MAAM,CAAC;QACpC;MACJ,CAAC;MACDH,MAAM,CAACK,UAAU,CAACR,MAAM,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IA7BG,IAAI,CAACO,KAAK,GAAG;MACTC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE,IAAI,CAACb,KAAK,CAACc;IAC3B,CAAC;EACL;EAGA;EACA;EACAL,YAAY,CAACD,MAAM,EAAE;IACjB;IACA,IAAI,CAACO,QAAQ,CAAC;MAACF,UAAU,EAAE,IAAI,CAACb,KAAK,CAACgB,WAAW,CAACR,MAAM,EAAE,IAAI,CAACG,KAAK,CAACE,UAAU,EAAE,EAAE;IAAC,CAAC,EAAE,MAAM;MACzF,IAAI,CAACb,KAAK,CAACiB,gBAAgB,CAAC,IAAI,CAACN,KAAK,CAACE,UAAU,CAAC;IACtD,CAAC,CACA;IACD;EACJ;;EAgBAK,MAAM,GAAG;IACL,oBACI;MAAA,wBAKI;QAAO,eAAY,YAAY;QAAC,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,YAAY;QAAC,QAAQ,EAAE,IAAI,CAACjB;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5F;QAAA,UACK,IAAI,CAACU,KAAK,CAACE,UAAU,CAACM;MAAM;QAAA;QAAA;QAAA;MAAA,QAC3B;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd;AACJ;AACA,eAAerB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}