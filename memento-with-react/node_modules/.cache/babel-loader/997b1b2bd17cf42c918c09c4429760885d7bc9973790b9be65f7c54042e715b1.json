{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Desktop/Memento Project Git/TeamC/memento-with-react/src/pages/QuizPage.js\";\nimport React, { useState, Component } from \"react\";\nimport './QuizPage.css';\nimport FlashCard from './components/Flashcard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuizPage extends Component {\n  constructor(props) {\n    super(props);\n    this.nextCardHandler = rightOrWrong => {\n      if (rightOrWrong === \"Correct\") {\n        console.log(\"The user was correct!\");\n        //Do relevant stats stuff\n      } else {\n        console.log(\"The user was Incorrect!\");\n        //Do relevant stats stuff\n      }\n\n      console.log(\"Current Index: \", this.state.currentIndex, \"arrayLength: \", this.props.cardArray.length, \"Starting to display: \", this.props.cardArray[this.state.currentIndex + 1].frontText);\n      if (this.props.cardArray.length > this.state.currentIndex) {\n        this.setState({\n          currentIndex: this.state.currentIndex + 1\n        });\n        this.setState({\n          currentFrontText: this.props.cardArray[this.state.currentIndex].frontText,\n          currentBackText: this.props.cardArray[this.state.currentIndex].backText,\n          currentCardHint: this.props.cardArray[this.state.currentIndex].cardHint,\n          currentCardDecks: this.props.cardArray[this.state.currentIndex].cardDecks\n        });\n      } else {\n        //We have gone through all the cards and should now display a message to the user about how many they god right...\n        this.setState({\n          done: true\n        });\n      }\n    };\n    this.state = {\n      cardArray: this.props.cardArray,\n      currentFrontText: this.props.cardArray[0].frontText,\n      currentBackText: this.props.cardArray[0].backText,\n      currentCardHint: this.props.cardArray[0].cardHint,\n      currentCardDecks: this.props.cardArray[0].cardDecks,\n      cardType: \"QuizCard\",\n      currentIndex: 0,\n      done: false\n    };\n    this.nextCardHandler = this.nextCardHandler.bind(this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.done === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FlashCard, {\n          type: \"Quiz\",\n          frontText: this.state.currentFrontText,\n          backText: this.state.currentBackText,\n          cardHint: this.state.currentCardHint,\n          cardDecks: this.state.currentCardDecks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"QuizPageButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"CorrectButton\",\n            onClick: () => this.nextCardHandler(\"Correct\"),\n            children: \"Correct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"IncorrectButton\",\n            onClick: () => this.nextCardHandler(\"Incorrect\"),\n            children: \"Incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default QuizPage;","map":{"version":3,"names":["React","useState","Component","FlashCard","QuizPage","constructor","props","nextCardHandler","rightOrWrong","console","log","state","currentIndex","cardArray","length","frontText","setState","currentFrontText","currentBackText","backText","currentCardHint","cardHint","currentCardDecks","cardDecks","done","cardType","bind","render"],"sources":["/home/anthony/Desktop/Memento Project Git/TeamC/memento-with-react/src/pages/QuizPage.js"],"sourcesContent":["import React, {useState, Component} from \"react\";\nimport './QuizPage.css';\nimport FlashCard from './components/Flashcard.js'\n\n\nclass QuizPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            cardArray: this.props.cardArray,\n            currentFrontText: this.props.cardArray[0].frontText,\n            currentBackText: this.props.cardArray[0].backText,\n            currentCardHint: this.props.cardArray[0].cardHint,\n            currentCardDecks: this.props.cardArray[0].cardDecks,\n            cardType: \"QuizCard\",\n            currentIndex: 0,\n            done: false\n        }\n        this.nextCardHandler = this.nextCardHandler.bind(this);\n    }\n\n\n\n\n    nextCardHandler = (rightOrWrong) => {\n        if (rightOrWrong === \"Correct\") {\n            console.log(\"The user was correct!\");\n            //Do relevant stats stuff\n        }\n        else {\n            console.log(\"The user was Incorrect!\");\n            //Do relevant stats stuff\n        }\n        console.log(\"Current Index: \", this.state.currentIndex, \"arrayLength: \", this.props.cardArray.length, \"Starting to display: \", this.props.cardArray[this.state.currentIndex + 1].frontText);\n        if (this.props.cardArray.length > this.state.currentIndex) {\n            this.setState({currentIndex: this.state.currentIndex + 1});\n            this.setState({currentFrontText: this.props.cardArray[this.state.currentIndex].frontText,\n                            currentBackText: this.props.cardArray[this.state.currentIndex].backText,\n                            currentCardHint: this.props.cardArray[this.state.currentIndex].cardHint,\n                            currentCardDecks: this.props.cardArray[this.state.currentIndex].cardDecks\n            })\n        }\n        else {\n            //We have gone through all the cards and should now display a message to the user about how many they god right...\n            this.setState({done: true});\n        }\n        \n        \n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.done === false && <div>\n                    <FlashCard type={\"Quiz\"} frontText={this.state.currentFrontText} backText={this.state.currentBackText} cardHint={this.state.currentCardHint} cardDecks={this.state.currentCardDecks}></FlashCard>\n                    <div className=\"QuizPageButtons\">\n                        <button className=\"CorrectButton\" onClick={() => this.nextCardHandler(\"Correct\")}>Correct</button>\n                        <button className=\"IncorrectButton\" onClick={() => this.nextCardHandler(\"Incorrect\")}>Incorrect</button>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}