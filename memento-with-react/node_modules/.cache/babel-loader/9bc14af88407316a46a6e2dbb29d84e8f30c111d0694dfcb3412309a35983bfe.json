{"ast":null,"code":"var _jsxFileName = \"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Importcard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport './Importcard.css';\n\n// interface Props {\n// }\n// interface State {\n// }\n// class ImportCard extends Component<Props, State> {\n//     constructor(props: Props) {\n//         super(props)\n//         this.state = {\n//             dragActive: false\n//         }\n//     };\n\n//     dragHandler = (event: React.DragEvent) => {\n//         event.preventDefault();\n//         event.stopPropagation();\n//         if (event.type === \"dragenter\" || event.type === \"dragover\") {\n//             this.setState({dragActive: true});\n//         } else if (event.type === \"dragleave\") {\n//             this.setState({dragACtive: false});\n//         }\n//     };\n\n//     dropHandler = (event: React.ChangeEvent) => {\n//         event.preventDefault();\n//         event.stopPropagation();\n//         this.setState({dragActive: false});\n//         // if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n//         //     //Handle files event.dataTransfer.files\n//         //     console.log(\"File drop!\");\n//         // }\n//     }\n\n//     // changeHandler = (event: React.DragEvent) => {\n//     //     event.preventDefault();\n//     //     // if (event.target.files && event.target.files[0]) {\n//     //     //     //Handle files event.target.files\n//     //     // }\n//     // }\n\n//     render() {\n//         return (\n//             <div>\n//                 <div className=\"ImportCard\">\n//                     <form id=\"form-file-upload\" onDragEnter={() => this.dragHandler} onSubmit={() => {}}></form>\n//                     <div>Eventually you will drag files here!</div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FileUploadField() {\n  _s();\n  const [preview, setPreviewImage] = useState();\n  const previewStyle = {\n    width: '200px'\n  };\n  const handleChange = useCallback(target => {\n    // const handleChange = useCallback(() => {\n    if (!target.currentTarget.files) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.addEventListener('load', evt => {\n      if (reader.result) {\n        setPreviewImage(reader.result);\n      }\n    });\n    reader.readAsDataURL(target.currentTarget.files[0]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"fileUpload\",\n      children: \"Upload file:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileUpload\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"src=\", preview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n}\n// export default ImportCard;\n_s(FileUploadField, \"6I48TyA4a5j9+BwIarcOXqhdY20=\");\n_c = FileUploadField;\nvar _c;\n$RefreshReg$(_c, \"FileUploadField\");","map":{"version":3,"names":["React","useCallback","useState","FileUploadField","preview","setPreviewImage","previewStyle","width","handleChange","target","currentTarget","files","reader","FileReader","addEventListener","evt","result","readAsDataURL"],"sources":["/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Importcard.tsx"],"sourcesContent":["import React, {Component, ReactElement, useCallback, useState, ChangeEvent} from 'react';\nimport './Importcard.css';\n\n\n// interface Props {\n// }\n// interface State {\n// }\n// class ImportCard extends Component<Props, State> {\n//     constructor(props: Props) {\n//         super(props)\n//         this.state = {\n//             dragActive: false\n//         }\n//     };\n\n//     dragHandler = (event: React.DragEvent) => {\n//         event.preventDefault();\n//         event.stopPropagation();\n//         if (event.type === \"dragenter\" || event.type === \"dragover\") {\n//             this.setState({dragActive: true});\n//         } else if (event.type === \"dragleave\") {\n//             this.setState({dragACtive: false});\n//         }\n//     };\n\n//     dropHandler = (event: React.ChangeEvent) => {\n//         event.preventDefault();\n//         event.stopPropagation();\n//         this.setState({dragActive: false});\n//         // if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n//         //     //Handle files event.dataTransfer.files\n//         //     console.log(\"File drop!\");\n//         // }\n//     }\n\n//     // changeHandler = (event: React.DragEvent) => {\n//     //     event.preventDefault();\n//     //     // if (event.target.files && event.target.files[0]) {\n//     //     //     //Handle files event.target.files\n//     //     // }\n//     // }\n\n\n\n//     render() {\n//         return (\n//             <div>\n//                 <div className=\"ImportCard\">\n//                     <form id=\"form-file-upload\" onDragEnter={() => this.dragHandler} onSubmit={() => {}}></form>\n//                     <div>Eventually you will drag files here!</div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nexport function FileUploadField(): ReactElement {\n    const [preview, setPreviewImage] = useState<string | undefined>();\n    const previewStyle = { width: '200px' };\n  \n    const handleChange = useCallback(( target: React.ChangeEvent<HTMLInputElement> ) => {\n    // const handleChange = useCallback(() => {\n        if (!target.currentTarget.files){\n            return\n        }\n        const reader = new FileReader();\n        reader.addEventListener('load', (evt) => {\n            if (reader.result) {\n            setPreviewImage(reader.result as string);\n            }\n        });\n      reader.readAsDataURL(target.currentTarget.files[0]);\n    }, []);\n  \n    return (\n      <div>\n        <label htmlFor=\"fileUpload\">Upload file:</label>\n        <input type=\"file\" id=\"fileUpload\" onChange={handleChange} />\n        {/* <input type=\"file\" id=\"fileUpload\" /> */}\n        {preview && (\n          <div>\n            src={preview}\n          </div>\n        )}\n      </div>\n    );\n  }\n// export default ImportCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAA4BC,WAAW,EAAEC,QAAQ,QAAoB,OAAO;AACxF,OAAO,kBAAkB;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,OAAO,SAASC,eAAe,GAAiB;EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,eAAe,CAAC,GAAGH,QAAQ,EAAsB;EACjE,MAAMI,YAAY,GAAG;IAAEC,KAAK,EAAE;EAAQ,CAAC;EAEvC,MAAMC,YAAY,GAAGP,WAAW,CAAGQ,MAA2C,IAAM;IACpF;IACI,IAAI,CAACA,MAAM,CAACC,aAAa,CAACC,KAAK,EAAC;MAC5B;IACJ;IACA,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAGC,GAAG,IAAK;MACrC,IAAIH,MAAM,CAACI,MAAM,EAAE;QACnBX,eAAe,CAACO,MAAM,CAACI,MAAM,CAAW;MACxC;IACJ,CAAC,CAAC;IACJJ,MAAM,CAACK,aAAa,CAACR,MAAM,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAO,OAAO,EAAC,YAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eAChD;MAAO,IAAI,EAAC,MAAM;MAAC,EAAE,EAAC,YAAY;MAAC,QAAQ,EAAEH;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,EAE5DJ,OAAO,iBACN;MAAA,mBACOA,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAEf;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AACF;AAAA,GA/BgBD,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}