{"ast":null,"code":"var _jsxFileName = \"/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Importcard.tsx\";\nimport React, { Component, useCallback } from 'react';\nimport './Importcard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImportCard extends Component {\n  constructor(props) {\n    super(props);\n    this.dragHandler = event => {\n      event.preventDefault();\n      event.stopPropagation();\n      if (event.type === \"dragenter\" || event.type === \"dragover\") {\n        this.setState({\n          dragActive: true\n        });\n      } else if (event.type === \"dragleave\") {\n        this.setState({\n          dragActive: false\n        });\n      }\n    };\n    this.dropHandler = event => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({\n        dragActive: false\n      });\n      // if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n      //     //Handle files event.dataTransfer.files\n      //     console.log(\"File drop!\");\n      // }\n    };\n    this.changeHandler = useCallback(target => {\n      if (!target.currentTarget.files) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.addEventListener('load', evt => {\n        if (reader.result) {\n          this.setState({\n            preview: reader.result\n          });\n        }\n      });\n      reader.readAsText(target.currentTarget.files[0]);\n    }, []);\n    this.state = {\n      dragActive: false,\n      preview: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImportCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"form-file-upload\",\n          onDragEnter: () => this.dragHandler,\n          onSubmit: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Eventually you will drag files here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileUpload\",\n        onChange: this.changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.state.preview && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ImportCard;","map":{"version":3,"names":["React","Component","useCallback","ImportCard","constructor","props","dragHandler","event","preventDefault","stopPropagation","type","setState","dragActive","dropHandler","changeHandler","target","currentTarget","files","reader","FileReader","addEventListener","evt","result","preview","readAsText","state","render"],"sources":["/home/josh/Desktop/COS520/Mem/TeamC/memento-with-react/src/pages/components/Importcard.tsx"],"sourcesContent":["import React, {Component, ReactElement, useCallback, useState, ChangeEvent} from 'react';\nimport './Importcard.css';\n\n\ninterface Props {\n    preview: string\n}\ninterface State {\n    dragActive: boolean,\n    preview: string\n}\nclass ImportCard extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            dragActive: false,\n            preview: \"\"\n        }\n    };\n\n    dragHandler = (event: React.DragEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        if (event.type === \"dragenter\" || event.type === \"dragover\") {\n            this.setState({dragActive: true});\n        } else if (event.type === \"dragleave\") {\n            this.setState({dragActive: false});\n        }\n    };\n\n    dropHandler = (event: React.ChangeEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({dragActive: false});\n        // if (event.dataTransfer.files && event.dataTransfer.files[0]) {\n        //     //Handle files event.dataTransfer.files\n        //     console.log(\"File drop!\");\n        // }\n    }\n\n    changeHandler = useCallback(( target: React.ChangeEvent<HTMLInputElement> ) => {\n        if (!target.currentTarget.files){\n            return\n        }\n        const reader = new FileReader();\n        reader.addEventListener('load', (evt) => {\n            if (reader.result) {\n                this.setState({preview: reader.result as string});\n            }\n        });\n      reader.readAsText(target.currentTarget.files[0]);\n    }, []);\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"ImportCard\">\n                    <form id=\"form-file-upload\" onDragEnter={() => this.dragHandler} onSubmit={() => {}}></form>\n                    <div>Eventually you will drag files here!</div>\n                </div>\n                <input type=\"file\" id=\"fileUpload\" onChange={this.changeHandler} />\n                    {this.state.preview && (\n                        <div>\n                            {this.state.preview}\n                        </div>\n                    )}\n            </div>\n        )\n    }\n}\nexport default ImportCard;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAgBC,WAAW,QAA8B,OAAO;AACxF,OAAO,kBAAkB;AAAC;AAU1B,MAAMC,UAAU,SAASF,SAAS,CAAe;EAC7CG,WAAW,CAACC,KAAY,EAAE;IACtB,KAAK,CAACA,KAAK,CAAC;IAAA,KAOhBC,WAAW,GAAIC,KAAsB,IAAK;MACtCA,KAAK,CAACC,cAAc,EAAE;MACtBD,KAAK,CAACE,eAAe,EAAE;MACvB,IAAIF,KAAK,CAACG,IAAI,KAAK,WAAW,IAAIH,KAAK,CAACG,IAAI,KAAK,UAAU,EAAE;QACzD,IAAI,CAACC,QAAQ,CAAC;UAACC,UAAU,EAAE;QAAI,CAAC,CAAC;MACrC,CAAC,MAAM,IAAIL,KAAK,CAACG,IAAI,KAAK,WAAW,EAAE;QACnC,IAAI,CAACC,QAAQ,CAAC;UAACC,UAAU,EAAE;QAAK,CAAC,CAAC;MACtC;IACJ,CAAC;IAAA,KAEDC,WAAW,GAAIN,KAAwB,IAAK;MACxCA,KAAK,CAACC,cAAc,EAAE;MACtBD,KAAK,CAACE,eAAe,EAAE;MACvB,IAAI,CAACE,QAAQ,CAAC;QAACC,UAAU,EAAE;MAAK,CAAC,CAAC;MAClC;MACA;MACA;MACA;IACJ,CAAC;IAAA,KAEDE,aAAa,GAAGZ,WAAW,CAAGa,MAA2C,IAAM;MAC3E,IAAI,CAACA,MAAM,CAACC,aAAa,CAACC,KAAK,EAAC;QAC5B;MACJ;MACA,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAGC,GAAG,IAAK;QACrC,IAAIH,MAAM,CAACI,MAAM,EAAE;UACf,IAAI,CAACX,QAAQ,CAAC;YAACY,OAAO,EAAEL,MAAM,CAACI;UAAgB,CAAC,CAAC;QACrD;MACJ,CAAC,CAAC;MACJJ,MAAM,CAACM,UAAU,CAACT,MAAM,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,EAAE,EAAE,CAAC;IArCF,IAAI,CAACQ,KAAK,GAAG;MACTb,UAAU,EAAE,KAAK;MACjBW,OAAO,EAAE;IACb,CAAC;EACL;EAoCAG,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAM,EAAE,EAAC,kBAAkB;UAAC,WAAW,EAAE,MAAM,IAAI,CAACpB,WAAY;UAAC,QAAQ,EAAE,MAAM,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC5F;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA+C;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7C,eACN;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,YAAY;QAAC,QAAQ,EAAE,IAAI,CAACQ;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,EAC9D,IAAI,CAACW,KAAK,CAACF,OAAO,iBACf;QAAA,UACK,IAAI,CAACE,KAAK,CAACF;MAAO;QAAA;QAAA;QAAA;MAAA,QAE1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAEd;AACJ;AACA,eAAepB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}